services:
  database:
    image: timescale/timescaledb:latest-pg16
    container_name: acme-db
    restart: always
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: P@ssword!1
      POSTGRES_DB: acme
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./ACME-REST/src/database/setup/create-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - acme-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d acme"]
      interval: 10s
      timeout: 5s
      retries: 5

  acme-rest:
  # build: ./ACME-REST
    image: lightleaf/acme-acme-rest
    container_name: acme-rest
    ports:
      - "4000:4000"
    env_file:
      - ./ACME-REST/.env_docker
    depends_on:
      database:
        condition: service_healthy
    networks:
      - acme-network
    entrypoint: ["/bin/sh", "/app/start.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  acme-ui:
    # build: ./acme-ui
    image: lightleaf/acme-acme-ui
    container_name: acme-ui
    ports:
      - "5173:5173"
    depends_on:
      acme-rest:
        condition: service_started
    env_file:
      - ./acme-ui/.env_docker
    networks:
      - acme-network
    entrypoint: ["/bin/sh", "/app/start.sh"]

  acme-simulator:
    # build: ./ACME-simulator
    image: lightleaf/acme-acme-simulator
    container_name: acme-simulator
    depends_on:
      acme-rest:
        condition: service_healthy
    env_file:
      - ./ACME-simulator/.env_docker
    networks:
      - acme-network
    stdin_open: true  # Keeps the container open
    tty: true         # Allocates a TTY
    entrypoint: ["/bin/bash"]  # Override the default Node.js execution
    command: ["-c", "exec /bin/bash"]  # Ensures a persistent interactive shell

volumes:
  db-data:

networks:
  acme-network:
    driver: bridge